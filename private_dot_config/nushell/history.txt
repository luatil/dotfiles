ls
ls | grep nu
ls
nvim .
ls
help
pyenv
sys 
sys | get host
ls
help
ps
htop
ps
help
ps | where cpu > 0
ps | sort-by mem
ls
help
help commands
tutor
tutor list
tutor table
ls
ls | select 2
ls | select name
ls get name
ls | get name
ls
tutor
tutor table
tutor begin
fzf
rg
grep
filter
filter --help
let a = {$in > 3}; [1, 2, 3] | filter $a
let a = {$in > 3}; [1, 2, 3, 4, 5, 6] | filter $a
ls
cd nu
env
ls
cat LICENSE
tutor
tutor list
tutor begin
tutor tables
tutor cells
ls
{ls}
{ls}.4.name
ls | select 4 | get name
{ls}
{ls}.4
{$ls}.4
tutor cells
tutor expressions
3
10 /2
10 / 2
10 * {3 + 4}
echo 3 2
echo 3 + 4
tutor echo
echo "Hello"
echo 1..10
echo 1..100
echo 1..100 | filter 
tutor list
tutor echo
tutor each
echo 1 2 3 | each { |it| $it + 10 }
echo 1..100 | filter { |it| $it < 10 }
echo 1..100 | filter { |it| $it < 10 } 
echo 1..100 | filter { |it| $it < 10 } | sort
sort -h
sort -r
echo 1..100 | sort -r
sort -r
ls
nuv
nu
env
list
echo 1..100
tutor
tutor list
ls
tutor
tutor list
tutor each
tutor blocks
ls | echo {|x| $x.name}
ls | each {|x| $x.name}
if true { echo "its true" } else { echo "it's not true" }
ls
tutor cat
cat nu_plugin_custom_values
ls
tutor
tutor begin
tutor tables
ls
cat LICENSE
ls
nvim .
ls
tutor begin
tutor --help
tutor list
tutor var
let $x = 3
x
$x
$nu
history
ls
tutor
tutor list
tutor var
$in
$x
env
tutor
tutor list
tutor block
tutor shorthand
$env
tutor
tutor env
$env
n 
p
du 
du .
ls
cd ..
du .
cd temp
ls
ls | sort-by size
rm pycharm-professional-2023.3.3.tar.gz
rm -rf pycharm-2023.3.3/
du
du .
du --help
du -a
du?
?du
? du
du
du ?
du -h
to 
ls
ls | to csv
ls | to json
ls
cal 
cal
ends
str -h
str ends-with
ls | str ends-with '.csv'
help str
str ends-with
str ends-with '.csv'
str ends-with '.csv' 'asdf'
ls
ls | grep '.csv'
ls | rg '.csv'
rf
rg
grep
filter
filter -he
help filter
filter
hash 'asdf'
hash
hash md5
"asdf" | hash md5
"asdf" | str ends-with '.csv'
ls | str ends-with '.csv'
ls | grep '*.csv'
ls
cat payment_summary_2024_2.csv
cat payment_summary_2024_2.csv | to 
cat payment_summary_2024_2.csv | to json
cat payment_summary_2024_2.csv 
cat payment_summary_2024_2.csv | to 
help to
cat payment_summary_2024_2.csv 
from 
cat payment_summary_2024_2.csv | from csv
cat payment_summary_2024_2.csv | from csv | select SME
cat payment_summary_2024_2.csv | from csv | select SME | head 4
cat payment_summary_2024_2.csv | from csv | select SME | head 
cat payment_summary_2024_2.csv | from csv | select SME | head -n 5
cat payment_summary_2024_2.csv | from csv | select SME 
first 
cat payment_summary_2024_2.csv | from csv | select SME | first 5
$env
help env
help $env
ls
http
http get
http get example.org
http get https://api.github.com/repos/nushell/nushell
http get https://api.github.com/repos/nushell/nushell | get license
http get https://api.github.com/repos/nushell/nushell | get license.key
http get https://api.github.com/repos/nushell/nushell | get license.key | type
nvim .
ls
ls | where size > 10mb
ls | where size > 10mb | first
ls | where size > 10mb | first | get name
ls | where size > 10mb | first | <\n>rm
ls | where size > 10mb | first | rm 
ls | where size > 10mb | first
ps | where cpu > 0
date now
date to-table
date
date humanize
date
date to-table
date | to-table
date
date -h
date now
date now to-record
date | to-record
date now | date to-table
date now | date humanize
ls
ls -alt
ls -a
ls
sys
sys | get host
sys | get host | get redis
sys | get host 
sys | get host.sessions.name
sys | get host.sessions.name | last 10
sys | get host.sessions.name | echo { |it| ^echo $it }
help -f path
help -f path | less
man
man help
help -f path
help path
ls
path type
ls | path type
ls | get name | path type
help type
help path
ls
cd ..
ls
./anki-23.12.1-linux-qt6/
ls
"hello" | save
help save
help save foo.txt
"hello" | save foo.txt
cat foo.txt
cat foo.txt | from 
cat foo.txt | from csv 
cat foo.txt | echo
echo foo.txt
echo 1..100
echo 1..100 | sort -r
ls
ls -r
ls -s
ls
ls | enumerate
ls | enumerate | echo { |it| $"Number {$it.index}" }
ls | enumerate
ls | enumerate | select 0
ls
env
$env
$env | first
$env 
$env | columns
$env | columns | find 
help find
$env | columns | find 
$env | columns | find SYDLE
$env | columns | find DEV
$env | columns | find DEV | echo $SYDLE_IS_DEV
$env | columns | find DEV | echo $env.SYDLE_IS_DEV
$env.SYDLE_IS_DEV
echo $env.SYDLE_IS_DEV
$env.CMD_DURATION_MS
echo $env.SYDLE_IS_DEV
which python
which python3
which ls
which python3
ls
ls | get name
fzf
help fzf
fzf
rg
help rg
grpe
which grep
which find
find
help find
which find
ls
ls **/**
$env.CMD_DURATION_MS
ls **/**
$env.CMD_DURATION_MS
$env.PWD
ls
cd ..
ls
grep
ls
$env.CMD_DURATION_MS
ls
ls **/**
pyenv
bash
poetry
chmod
help chmod
git
git -v
git
g
gh
g
gh
ls
exit
tmux
ls
cd go
ls
cd ..
go
mtux
tmux
nvim ~/.tmux.conf
nvim
which nvim
vim
nvim
bash
vim ~/.config/nushell/
xclip -sel clip -o
path 
help path
ls:
vim ~/.config/nushell/
uuid
random
random chars
random dice
random uuid
random chars
help random chars
random chars -l 100
random chars -l 100 | filter 
random chars -l 100 | filter { |it| $it = 'a' }
random chars -l 100 | from 
help from
random chars -l 100 | split
help split
random chars -l 100 | split chars
random chars -l 100 | split chars |<\n>filter { |it| $it = a}
random chars -l 100 | split chars |<\n>filter { |it| $it == 'a' }
random chars -l 100 | split chars |<\n>filter { |it| $it == 'r' }
random chars -l 100 | split chars |<\n>find
help find
random chars -l 100 | split chars |<\n>find 'a'
random chars -l 100
random chars -l 100 | split chars
random chars -l 100 | split chars | <\n>group
help group
random chars -l 100 | split chars | <\n>group 2
random chars -l 100 | split chars | <\n>
help
help commands
random chars -l 100 | split chars | <\n>transpose
help commands | less
help commands | more
help commands | to text
help commands 
help commands | select name usage
help commands | select name input
help commands | select name usage
path
$env.PATH
vim ~/.config/nushell/
vim ~/.config/nushell/env.nu
exit
nvim
tmux
nvim ~/.tmux.conf
ls
nvim ~/.config/nushell/
exit
exit
tmux
ls
ping google.com
nvim ~/.tmux.conf
mkdir ~/.config/tmux
mv ~/.tmux.conf ~/.config/tmux/
exit
exit
tmux
ls
ls
htop
ls
nu
ping google.com
accelerate-estimate-memory 
exit
exit
tmux
exit
ls
echo $env
echo $USER
echo $env.USER
ls
bash
kubectl
ls
nvim temp.txt
nvim 
nvim temp.txt
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
nvim $env.XDG_CONFIG_DIRS
nvim ~/.config/tmux/
exit
exit
ls
nvim .
nvim ~/.tmux.conf
nvim ~/.config/tmux
tmux source ~/.config/tmux/tmux.conf
nvim 
nvim ~/.config/tmux
tmux source ~/.config/tmux/tmux.conf
nvim ~/.config/tmux
exit
exit
exit
clear
ls
clear
clear
c
alias
help 
help  --find alias
help alias
alias c = clear
c
clear
cls
clear
clear
exit
exit
exit
nvim
tmux source ~/.config/tmux/tmux.conf
exit
ls
ls
nvim 
n
alias n = 'nvim'
alias n = nvim
n
echo $TERM
echo $env.TERM
tmux source ~/.config/tmux/tmux.conf
clear
nvim ~/.config/nushell/
exit
exit
exit
exit
tmux
exit
ls
ls
exit
ls
ls | get name
pyenv
nvim
lcear
clear
clear
p 
ls
cd Audio
p
ls
cd go
ls
exit
clear
cd ~
ls
fzf
nvim ~/.config/tmux/
exit
exit
tmux
nvim ~/.config/tmux/
nvim 
ls
lcear
clear
cl
alias cl = clear
cl
vl
nvim ~/.config/tmux/
clear
nvim ~/.config/tmux
nvim ~/.config/nvim
exit
exit
nvim ~/.config/tmux/
tmux source ~/.config/tmux/tmux.conf
nvim ~/.config/nvim
nvim ~/.config/tmux/
exit
exit
tmux
ls
ls
nvim ~/.config/tmux/
exit
exit
tmux
ls
cd Audio
ls
nvim ~/.config/tmux/
exit
exit
nvim ~/.config/tmux/
exit
tmux
ls
tmux source ~/.config/tmux/tmux.conf
ls
nvim Audio/
exit
exit
nvim ~/.config/tmux
exit
xit
apt search chezmoi
cp ~/Downloads/chezmoi_2.47.2_linux_amd64.tar.gz ~/apps
cd apps
ls
tar -xf chezmoi_2.47.2_linux_amd64.tar.gz
ls
rm chezmoi_2.47.2_linux_amd64.tar.gz
ls
mkdir chezmoi
mkdir chezmoi_app
mv LICENSE README.md chezmoi completions/ chezmoi
ls
mv LICENSE README.md chezmoi completions/ chezmoi_app/
ls
cd chezmoi_app/
ls
./chezmoi
ls
cd ..
ls
nvim ~/.config/nushell/
exit
ls
chezmoi 
gh
chezmoi
poetry
which poetry
python3 -v
exit
which python3
python3
pyenv
python3
chezmoi
eport
export
with-env
help with-env
ls
with-env
adsf
with-env
help with-env
with-env [MYENV "my env value"] { $env.MYENV }
with-env [MYENV "my env value"] { python3 }
MYENV=asdf python3
myenv
ls
ls | get name
ls | select name
ls | select name size
ls | select name size | sort-by size
ls | select name size | sort-by size -r
kubectl
ls
cat kubectl
kubectl
ls
docker
sudo
help sudo
exit
exit
tmux
gh repo
ls
cd code
l
ls
cd ..
gh repo clone luatil dotfiles
gh repo clone luatli/dotfiles
gh repo clone luatil/dotfiles
cd dotfiles
s
ls
ls -alt
ls -a
cat README.md
rm -rf .
ls
rm -rf nvim 
ls
ls -alt
ls
ls -a
help rm
ls -a
cat .bashrc
rm .bashrc
ls
la -a
la
alias la = ls -a
la
rm .tmux.conf
rm .vimrc
ls
nvim README.md
gs
nvim README.md
ls
gs
nvim .
ls
chezmoi init
chezmoi add ~/.config/nvim
chezmoi edit ~/.config/nvim
$env.EDITOR
$EDITOR
env
env | rg editor
nvim ~/.config/nushell/
exit
ls
$env.EDITOR
chezmoi
chezmoi list
chezmoi edit .config/nvim
chezmoi diff
chezmoi cd
chezmoi edit
chezmoi
ls
rm -rf dotfiles/
ls
ls install/
rm -rf install/
ls
cat go/
ls
ls go
cat temp.txt
chezmoi add ~/.config/tmux
chezmoi
ls
chezmoi cd
chezmoi diff
chezmoi cd
